pipeline {
   agent any
    
    environment {
        AWS_REGION = "us-east-1"
        ECR_REPO = "715841367723.dkr.ecr.us-east-1.amazonaws.com/ncpl_spring"
        IMAGE_TAG = "latest"
		CLUSTER_NAME = "ncplcluster"
        SERVICE_NAME = "ncpl_springapp_service2"
        TASK_DEFINITION_FAMILY = "ncpl_springapp_task_definition"
    }

    stages {
        stage('Authenticate with ECR') {
            steps {
                sh '''
                aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
                '''
            }
        }
        
        stage('Pull from ECR') {
            steps {
                sh '''
                docker pull $ECR_REPO:$IMAGE_TAG
                '''
            }
        }
        
        stage('Register New Task Definition') {
            steps {
                sh '''
                # Fetch the existing task definition JSON
                NEW_TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_FAMILY --region $AWS_REGION --query 'taskDefinition' | jq 'del(.taskDefinitionArn, .status, .revision, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')

                # Update the container image in the task definition
                NEW_TASK_DEF=$(echo $NEW_TASK_DEF | jq --arg IMAGE "$ECR_REPO:$IMAGE_TAG" '.containerDefinitions[0].image = $IMAGE')

                # Save the new task definition JSON
                echo $NEW_TASK_DEF > new-task-def.json

                # Register the new task definition
                aws ecs register-task-definition --cli-input-json file://new-task-def.json --region $AWS_REGION
                '''
            }
        }
        
        stage('Update ECS Service') {
            steps {
                sh '''
                # Get the latest task definition revision
                LATEST_TASK_DEF_REVISION=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_FAMILY --query 'taskDefinition.revision' --output text --region $AWS_REGION)

                # Update the ECS service with the latest task definition
                aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_DEFINITION_FAMILY:$LATEST_TASK_DEF_REVISION --region $AWS_REGION
                '''
            }
        }
		
		        // stage('Deploy Container') {
        //     steps {
        //         script {
        //             sh "docker run -d -p 9090:8080 $ECR_REPO:$IMAGE_TAG"

        //         }
        //     }
        // }
        

    }
}